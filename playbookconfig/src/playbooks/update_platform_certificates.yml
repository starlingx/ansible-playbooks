---
#
# Copyright (c) 2021-2023 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# This playbook is intended to be run on system controller or
# standalone systems.
#
# It provides the capability to migrate platform certificates
# (registry.local, https/rest-api, oidc-client) to cert-manager.
#
# To run the playbook, the user would define an overrides file that
# provides the required variable settings, passing this on the ansible
# command-line as a parameter.
# (see update-platform-certificates-inventory-EXAMPLE.yml)
#
# Example command:
# ansible-playbook update_platform_certificates.yml \
#     -i @update-platform-certificates-inventory.yml \
#     --extra-vars "target_list=subcloud1 mode=update"
#
# Use target_list to target individual subclouds, or a comma-separated
# list of subclouds such as 'subcloud1,subcloud2'. To target all online
# subclouds at once use target_list=all_online_subclouds
#
# To target the system controller or standalone systems use target_list=localhost.
# It's recomended to have always at least localhost in the target_list, avoiding
# the loss of consistency of the certificates between the hosts in DC systems.
#

- hosts: localhost
  gather_facts: no
  tasks:
    - name: Fail if target_list is not defined
      fail:
        msg: >-
          Please provide the target list in extra-vars.
          Example --extra-vars "target_list=subcloud1,subcloud2"
          or "target_list=all_online_subclouds" to target all online subclouds
          in 'dcmanager subcloud list'
      when: target_list is undefined

    - name: Get all online subclouds in the system
      block:
        - name: Get online subclouds from dcmanager
          shell: |
            source /etc/platform/openrc
            dcmanager subcloud list -c name -c availability | awk ' $4 == "online" { print $2 }'
          register: subclouds

        - name: Add host to target_group
          add_host:
            name: "{{ item }}"
            groups: target_group
          with_items: "{{ subclouds.stdout_lines }}"

      when: "'all_online_subclouds' in target_list"

    - name: Get subcloud from extra-vars
      add_host:
        name: "{{ item }}"
        groups: target_group
      with_items: "{{ target_list.split(',') }}"
      when: "item != 'all_online_subclouds'"

- hosts: target_group
  gather_facts: no
  vars_files:
  - host_vars/update-platform-certificates/default.yml

  # for mode=check the output is too messy with free strategy
  strategy: "{{ 'linear' if mode == 'check' else 'free' }}"
  roles:
    - common/check-connectivity
    - update-platform-certificates

# Ensures ICA is also installed in system controller
# even when target_list contains only subclouds
# Moved this tasks to be the very last because 'system ca-certificate-install'
# creates a temporary management affecting alarm. In order to avoid waiting
# for it to clear, running it as a last step. No side effects of doing this.
- hosts: localhost
  gather_facts: no
  tasks:
    - block:
      # If 'localhost' wasn't included in the target_list, we need the
      # 'target_group' variables from the inventory for privilege escalation
      - name: Include localhost in target_group to acquire required variables
        add_host:
          name: localhost
          groups: target_group
        when: "'localhost' not in groups['target_group']"

      - name: Install Root CA certificate as trusted by the platform
        include_role:
          name: common/verify-and-install-system-local-ca-certs
        vars:
          - install_rca: true

      - name: Restart kube-apiserver to pick the new certificates
        include_role:
          name: common/restart-kube-apiserver

      - name: Restart openldap server to use the new certificates
        shell: "sm-restart service open-ldap"
        become: true

      - name: Check openldap service is enabled after restart
        shell: sm-query service open-ldap | grep -c enabled-active
        become: true
        register: service_status
        until: service_status.stdout == '1'
        retries: 10
        delay: 10

      when: mode == 'update'
