---
#
# Copyright (c) 2023 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# TASKS DESCRIPTION:
#   These task performs the following:
#     - download images in the images list if specified and push them to the
#       local registry.
#     - archive the snapshot of the registry filesystem and save it in the
#       prestage directory.
#     - remove downloaded images from the local registry if the subcloud is
#       running software version older than 22.12 (Debian)
#

- block:
  - block:
    # The following task will generate the docker_registries dictionary used for images download
    - name: Retrieve the configured docker registries
      import_tasks: get_docker_registries.yml

    - name: Log in the docker registries that are authenticated
      docker_login:
        registry: "{{ item.value.url }}"
        username: "{{ item.value.username }}"
        password: "{{ item.value.password }}"
      register: login_result
      retries: 10
      delay: 5
      until: login_result is succeeded
      loop: "{{ docker_registries|dict2items }}"
      when: item.value.username is defined
      no_log: true

    - name: Set prestage environment variables
      set_fact:
        prestage_env:
          REGISTRIES: "{{ docker_registries | to_json }}"
          PRESTAGE_DOWNLOAD: yes

    - block:
      - name: Create a temp file to hold the list of images to be purged
        tempfile:
          state: file
          suffix: prestage_purge
        register: purge_file

      - name: Set purge images list if subcloud is running CentOS
        set_fact:
          prestage_env: "{{ prestage_env|combine({ 'PURGE_IMAGES_LIST_FILE': purge_file.path }) }}"
      when: host_software_version is version('22.12', '<')

    - name: Download container images for prestage
      script: >
        roles/common/push-docker-images/files/download_images.py
        "{{ image_list | unique | join(',') }}"
      register: download_images_output
      retries: "{{ download_retries | default(10) }}"
      delay: "{{ retry_delay | default(5) }}"
      until: (download_images_output.rc == 0 or "HARD FAIL" in download_images_output.stdout)
      failed_when: download_images_output.rc != 0
      environment: "{{ prestage_env }}"

    - debug: var=download_images_output.stdout_lines

    - name: Log out of the authenticated registries
      docker_login:
        registry: "{{ item.value.url }}"
        state: absent
      loop: "{{ docker_registries|dict2items }}"
      when: item.value.username is defined
      no_log: true

    when: image_list

  - name: Take a snapshot of the local registry filesystem
    import_role:
      name: common/generate-registry-filesystem-archive
    vars:
      registry_archive_fqpn: "{{ prestage_dir }}/local_registry_filesystem.tgz"
    when: prestage_reason == 'for_install'

  always:
    - name: Clear docker cache
      command: docker image prune -af
      failed_when: false

    - block:
      - name: Read content of purge file
        slurp:
          src: "{{ purge_file.path }}"
        register: purge_list

      - set_fact:
          images_to_purge: "{{ (purge_list.content|b64decode|trim).split('\n')|select() }}"

      - debug: var=images_to_purge
      - block:
        - name: Remove downloaded images from the local registry (CentOS subcloud only)
          shell: "source /etc/platform/openrc; system registry-image-delete {{ item }}"
          loop: "{{ images_to_purge }}"

        - name: Start registry garbage collect
          shell: source /etc/platform/openrc; system registry-garbage-collect
        when: images_to_purge|length > 0

      - name: Remove purge temp file
        file:
          path: "{{ purge_file.path }}"
          state: absent
      when: purge_file is not skipped
