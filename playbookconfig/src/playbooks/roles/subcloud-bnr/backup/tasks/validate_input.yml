---
#
# Copyright (c) 2022-2023 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# TASKS DESCRIPTION:
#   Validate user input, prepare backup overrides and set facts for subsequent
#   tasks.
#
- name: Fail if mandatory values are mis-configured
  fail:
    msg: "{{ item.key }} parameter must be specified as true or false"
  when: item.key is undefined or item.value|type_debug != 'bool'
  loop:
    - { key: local, value: "{{ local }}" }
    - { key: backup_registry_images, value: "{{ backup_registry_images }}" }

- name: Fail if custom images backup is requested for centralized backup
  fail:
    msg: "Custom images backup is not supported for centralized backup request."
  when: not local and backup_registry_images

- name: Fail if storage location is not specified for centralized backup
  fail:
    msg: "central_backup_dir must be specified if 'local' parameter is set to false."
  when: central_backup_dir is undefined and not local

- name: Query system_mode
  shell: |
    source /etc/platform/openrc
    system show | awk '$2 == "system_mode" { print $4 }'
  register: current_system_mode

- name: Set system mode based on the current config
  set_fact:
    system_mode: "{{ current_system_mode.stdout }}"


- name: Create temp file for modified backup overrides
  tempfile:
    state: file
    suffix: "{{ inventory_hostname }}"
  register: bkup_overrides
  connection: local

- name: Copy content of backup overrides to temp file
  copy:
    src: "{{ subcloud_bnr_overrides }}"
    dest: "{{ bkup_overrides.path }}"
    remote_src: no
  connection: local

- name: Set subcloud overrides filename
  set_fact:
    subcloud_overrides: "{{ bkup_overrides.path }}"

- name: Retrieve software version number
  shell: source /etc/build.info; echo $SW_VERSION
  register: sw_version_result

- name: Set software version for the backup
  set_fact:
    software_version: "{{ sw_version_result.stdout }}"

- name: Turn off optimized_bnr_supported flag
  set_fact:
    optimized_bnr_supported: false
  when: software_version is version('22.12', '<') or
        (system_mode == 'duplex') or
        (test_mode is defined and test_mode == 'legacy')

- block:
  - name: Set backup filename prefix in subcloud overrides file
    lineinfile:
      path: "{{ subcloud_overrides }}"
      line: "platform_backup_filename_prefix: {{ default_backup_prefix }}"
    connection: local

  - name: Set backup filename prefix fact
    set_fact:
      platform_backup_filename_prefix: "{{ default_backup_prefix }}"

  when: platform_backup_filename_prefix is undefined

- block:
  - name: Set registry filesystem backup prefix in overrides file
    lineinfile:
      path: "{{ subcloud_overrides }}"
      line: "registry_filesystem_backup_filename_prefix: {{ default_registry_filesystem_backup_prefix }}"
    connection: local
    when: registry_filesystem_backup_filename_prefix is undefined

  - name: Set user images backup prefix in overrides file
    lineinfile:
      path: "{{ subcloud_overrides }}"
      line: "user_images_backup_filename_prefix: {{ default_user_images_backup_prefix }}"
    connection: local
    when: user_images_backup_filename_prefix is undefined

  # Backing up registry filesystem implies backing all platform and user images in the registry
  - name: Set backup_registry_filesystem flag in overrides file
    lineinfile:
      path: "{{ subcloud_overrides }}"
      line: "backup_registry_filesystem: true"
    connection: local
    when: optimized_bnr_supported

  # In the old CentOS releases, the user images will be backed up only if
  # the backup_user_local_registry is specified in the overrides or in extra-vars.
  # In the new Debian releases, the backup_user_local_registry was replaced by
  # backup_user_images. Therefore, we set both for backward compatibility.
  - name: Set backup_user_images flag in overrides file
    lineinfile:
      path: "{{ subcloud_overrides }}"
      line: "{{ item }}"
    with_items:
      - "backup_user_images: true"
      - "backup_user_local_registry: true"
      - "default_user_images_backup_prefix: {{ default_user_images_backup_prefix }}"
    connection: local
    when: not optimized_bnr_supported

  when: backup_registry_images

# Subclouds do not have their software deployments restored via B&R.
- name: Set exclude software deployments during backup in overrides file
  lineinfile:
    path: "{{ subcloud_overrides }}"
    line: "exclude_sw_deployments: true"
  connection: local

- block:
  - name: Update default_local_backup_dir fact
    set_fact:
      default_local_backup_dir: "{{ default_local_backup_dir }}/{{ software_version }}"

  - name: Set backup_dir fact
    set_fact:
      backup_dir: "{{ default_local_backup_dir if local else default_local_staging_dir }}"
  when: backup_dir is undefined

- name: Write backup directory config to subcloud overrides file
  lineinfile:
    path: "{{ subcloud_overrides }}"
    line: "backup_dir: {{ backup_dir }}"
  connection: local

- name: Update central_backup_dir fact
  set_fact:
    central_backup_dir: "{{ central_backup_dir }}/{{ inventory_hostname }}/{{ software_version }}"
  when: not local
