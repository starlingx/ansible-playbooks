---
#
# Copyright (c) 2025 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# ROLE DESCRIPTION:
#   This role is to enable and configure IPSec on all hosts
#   per the execution of initial-auth operation.
#

- name: Get system mode
  shell: source /etc/platform/platform.conf; echo $system_mode
  register: system_mode

- block:
  - name: Get PXEBoot network addresses list of pending hosts
    script: roles/configure-ipsec/files/get_ipsec_disabled_addr_list.py
    register: pending_hosts
    become_user: postgres

  - name: Get PXEBoot network addresses list
    script: roles/common/files/get_pxeboot_addr_list.py
    register: ip_addrs_list

  - set_fact:
      retry_count: 0
      failures_list: []
      pending_hosts: "{{ pending_hosts.stdout }}"
      pxeboot_addrs: "{{ ip_addrs_list.stdout }}"

  # It is found that when enabling IPsec, if the active controller is enabled before
  # worker node, worker node will no longer have the shared FS (/opt/platform) mounted,
  # the ipsec-client command will hang forever. Further investigation shows the
  # puppet apply invoked by ipsec-client is blocked at resolving "file system" facts,
  # and strace shows statfs() system call is blocked on the shared FS (/opt/platform).
  # The solution here is to create a facter.conf file to exclude "file system" fact
  # resolving for puppet apply.
  - name: Create facter.conf to exclude "file system" fact resolve in puppet apply
    command: >-
      ansible all -i "{{ item }}," -m shell -a "mkdir -p /etc/puppetlabs/facter &&
      echo -e \"facts : {\n  blocklist : [ \"file system\" ],\n}\" >
      /etc/puppetlabs/facter/facter.conf" -b -e "ansible_ssh_user={{ ansible_ssh_user }}
      ansible_ssh_pass={{ ansible_ssh_pass }} ansible_become_pass={{ ansible_become_pass }}"
    loop: "{{ pxeboot_addrs }}"

  - name: Execute initial-auth operation on hosts
    include_tasks: execute-initial-auth-operation.yml
    when: 'pending_hosts | length > 0'

  - name: Get hostnames list
    script: roles/configure-ipsec/files/get_all_hostnames.py
    register: all_hosts
    become_user: postgres

  - name: Get MGMT network addresses list
    script: roles/configure-ipsec/files/get_all_mgmt_addrs.py
    register: all_mgmt_ips
    become_user: postgres

  - set_fact:
      all_hosts: "{{ all_hosts.stdout }}"
      all_mgmt_ips: "{{ all_mgmt_ips.stdout }}"

  # Wait until IPsec SAs are established and hosts are reachable.
  - name: Wait until hosts are reachable
    shell: ping -c 1 -w 5 {{ item }} | grep ' 0% packet loss'
    register: host_is_reachable
    loop: "{{ all_hosts | list }}"
    until: host_is_reachable is not failed
    retries: 18
    delay: 10

  - name: Wait until SAs are established
    shell: >-
      tail -n 100 /var/log/charon.log |
      grep "= {{ item }}" -A 2 |
      grep 'checkin of IKE_SA successful'
    register: ike_sas
    loop: "{{ all_mgmt_ips }}"
    retries: 24
    delay: 5
    until: ike_sas.rc|int == 0
    failed_when: false

  - name: Check if SAs are established
    shell: swanctl --list-sas | grep -c {{ item }}
    register: host_sas
    loop: "{{ all_hosts | list }}"
    until: host_sas.stdout|int >= 1
    retries: 2
    delay: 30
    failed_when: false

  - name: Failed to establish SAs, restart strongswan service
    include_tasks: roles/configure-ipsec/files/restart-strongswan-locally.yml
    when: host_sas is failed

  - name: Recheck SAs for each host
    shell: "swanctl --list-sas | grep -c {{ item }}"
    register: recheck_host_sas
    loop: "{{ all_hosts | list }}"
    until: recheck_host_sas.stdout|int >= 1
    retries: 3
    delay: 30
    failed_when: false
    when: host_sas is failed

  - name: Verify if there are 200.005 alarms
    block:
    - name: Check if 200.005 alarm exists and wait to be cleared
      shell: |
        source /etc/platform/openrc;
        fm alarm-list --query alarm_id=200.005
      register: mgmt_alarm
      retries: 3
      delay: 15
      until: mgmt_alarm.stdout == ""
      failed_when: false

    - name: Fail when the alarm remains
      fail:
        msg: >-
          Timed out waiting 200.005 alarm to clear out.
      when: mgmt_alarm.stdout != ""
    when: recheck_host_sas is failed

  - name: Enable ipsec-server service on controllers
    command: >-
      ansible all -i "{{ item }}," -m command -a "systemctl enable ipsec-server.service --now"
      -b -e "ansible_ssh_user={{ ansible_ssh_user }} ansible_ssh_pass={{ ansible_ssh_pass }}
      ansible_become_pass={{ ansible_become_pass }}"
    with_items:
      - controller-0
      - controller-1

  - name: Start and provision ipsec-config service on controllers
    command: >-
      ansible all -i "{{ item }}," -m command -a "sm-provision service-group-member
      controller-services ipsec-config --apply" -b -e "ansible_ssh_user={{ ansible_ssh_user }}
      ansible_ssh_pass={{ ansible_ssh_pass }} ansible_become_pass={{ ansible_become_pass }}"
    with_items:
      - controller-0
      - controller-1

  - name: Remove the created facter.conf and directories
    command: >-
      ansible all -i "{{ item }}," -m command -a "rm -rf /etc/puppetlabs"
      -b -e "ansible_ssh_user={{ ansible_ssh_user }} ansible_ssh_pass={{ ansible_ssh_pass }}
      ansible_become_pass={{ ansible_become_pass }}"
    loop: "{{ pxeboot_addrs }}"

  when: system_mode.stdout != "simplex"
