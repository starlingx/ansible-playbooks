---
#
# Copyright (c) 2021 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# DESCRIPTION:
#   These tasks configure and launch FluxCD helm and source controllers.
#

# Create a temporary directory and copy FluxCD resource files for kubectl.
- name: Set up FluxCD resource files
  block:
  - name: Create FluxCD resource directory
    file:
      path: "{{ fluxcd_resource_dir }}"
      state: directory

  - name: Create FluxCD resource files from templates
    template:
      src: "{{ item }}"
      dest: "{{ fluxcd_resource_dir }}/{{ item | basename | regex_replace('\\.j2$', '') }}"
    with_fileglob:
    - "{{ role_path }}/templates/fluxcd-*.j2"

- name: Configure and launch FluxCD helm and source controllers
  block:
    # Create the FluxCD namespace. This is used for the local registry secret.
    - name: Create namespace for FluxCD
      command: kubectl create namespace {{ fluxcd_namespace }}
      retries: "{{ create_fluxcd_ns_retries }}"
      delay: "{{ delay_time }}"
      register: create_fluxcd_ns
      until: create_fluxcd_ns.rc == 0
      failed_when: false
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Fail if creating namespace fails
      fail:
        msg: "Failed to create {{ fluxcd_namespace }} namespace. Error: {{ create_fluxcd_ns.stderr }}"
      when: create_fluxcd_ns.rc !=0 and create_fluxcd_ns.stderr is not search('AlreadyExists')

    # Label FluxCD namespace with PSAC labels
    - name: Label namespace for FluxCD with PSAC labels
      command: kubectl label --overwrite namespaces {{ fluxcd_namespace }}
               app.starlingx.io/component=platform
               pod-security.kubernetes.io/audit-version=latest
               pod-security.kubernetes.io/enforce-version=latest
               pod-security.kubernetes.io/warn-version=latest
               pod-security.kubernetes.io/audit=privileged
               pod-security.kubernetes.io/enforce=privileged
               pod-security.kubernetes.io/warn=privileged
      retries: "{{ create_fluxcd_ns_retries }}"
      delay: "{{ delay_time }}"
      register: label_fluxcd_ns
      until: label_fluxcd_ns.rc == 0
      failed_when: false
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Fail if labeling namespace fails
      fail:
        msg: "Failed to label {{ fluxcd_namespace }} namespace. Error: {{ label_fluxcd_ns.stderr }}"
      when: label_fluxcd_ns.rc !=0

    - name: Check if flux helm and source controllers exist
      command: kubectl -n {{ fluxcd_namespace }} get pods
      retries: "{{ create_fluxcd_ns_retries }}"
      delay: "{{ delay_time }}"
      register: fluxcd_get_pods
      until: fluxcd_get_pods.rc == 0
      failed_when: false
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    # We scale these deployments down and back up because in setups with more
    # than 3 nodes, the cluster could be in the PartialDisruption state and
    # the pods may not be rescheduled off of a down
    # node. This ensures that the pods will be on controller-0 and will
    # become available.
    # See https://bugs.launchpad.net/starlingx/+bug/1893149
    - name: Scale helm-controller & flux-controller deployments to 0
      command: >-
        kubectl --kubeconfig=/etc/kubernetes/admin.conf scale deployment
        -n {{ item.namespace }} {{ item.deployment }} --replicas=0
      with_items:
        - { namespace: flux-helm, deployment: helm-controller }
        - { namespace: flux-helm, deployment: source-controller }
      when: (mode is defined and mode == 'restore') and
            fluxcd_get_pods.stderr is not search('No resources found')
      retries: "{{ create_fluxcd_ns_retries }}"
      delay: "{{ delay_time }}"
      register: scale_deployments
      until: scale_deployments.rc == 0

    - block:
        - name: Check if secret exists
          command: kubectl -n {{ fluxcd_namespace }} get secret {{ fluxcd_secret_name }}
          retries: "{{ create_fluxcd_ns_retries }}"
          delay: "{{ delay_time }}"
          register: fluxcd_get_secret
          until: fluxcd_get_secret.rc == 0
          failed_when: false
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf

        - name: Create secret if it doesn't exist
          command: >-
            kubectl -n {{ fluxcd_namespace }} create secret docker-registry {{ fluxcd_secret_name }}
            --docker-server={{ local_registry }}
            --docker-username={{ local_registry_credentials['username'] }}
            --docker-password={{ local_registry_credentials['password'] }}
          retries: "{{ create_fluxcd_ns_retries }}"
          delay: "{{ delay_time }}"
          register: Create_secret_if_it_does_not_exist
          until: Create_secret_if_it_does_not_exist.rc == 0
          when: fluxcd_get_secret.rc !=0
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf

        - name: Install flux helm and source controllers with no prior deployment
          command: kubectl create -f {{ fluxcd_resource_dir }}
          retries: "{{ create_fluxcd_ns_retries }}"
          delay: "{{ delay_time }}"
          register: create_fluxcd_pods
          until: create_fluxcd_pods.rc == 0
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf
      when: fluxcd_get_pods.stderr is search('No resources found')

    - block:
        # This will scale the deployment up, but will also upgrade FluxCD in case there was a change
        - name: Install flux helm and source controllers for restore/upgrades over existing deployment
          command: kubectl apply -f {{ fluxcd_resource_dir }}
          retries: "{{ create_fluxcd_ns_retries }}"
          delay: "{{ delay_time }}"
          register: create_fluxcd_pods
          until: create_fluxcd_pods.rc == 0
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf

      when: (mode is defined and mode == 'restore') and
            fluxcd_get_pods.stderr is not search('No resources found')

    - block:
        - name: Install flux helm and source controllers for upgrade activate
          command: kubectl apply -f {{ fluxcd_resource_dir }}
          retries: "{{ create_fluxcd_ns_retries }}"
          delay: "{{ delay_time }}"
          register: create_fluxcd_pods
          until: create_fluxcd_pods.rc == 0
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf

      when: (upgrade_activate_from_release is defined and
             upgrade_activate_from_release != '21.12')

  always:
  - name: Clean FluxCD resource directory
    file:
      path: "{{ fluxcd_resource_dir }}"
      state: absent
