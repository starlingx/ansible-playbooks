apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: {{ apiserver_advertise_address }}
  bindPort: 16443
nodeRegistration:
  criSocket: unix:///var/run/containerd/containerd.sock
  # configure kubeadm to not apply the default
  # taint "node-role.kubernetes.io/master:NoSchedule" to control plane nodes
  taints: {{ kubelet_taints }}
  kubeletExtraArgs:
    {{kubelet_extra_args | to_nice_yaml(width=512) | indent(4, indentfirst=False)}}
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs:
  {{ apiserver_cert_list | to_nice_yaml(width=512) | indent(2, indentfirst=False) }}
  extraArgs:
    {{apiserver_extra_args | to_nice_yaml(width=512) | indent(4, indentfirst=False)}}
  extraVolumes:
{% for volume in apiserver_extra_volumes %}
    - name: "{{ volume.name }}"
      mountPath: {{ volume.mountPath }}
{% if volume.pathType == 'File' %}
      hostPath:  {{ volume.hostPath }}
      pathType: File
{% else %}
      hostPath: {{ volume.mountPath }}
      pathType: DirectoryOrCreate
{% endif %}
{% if volume.readOnly == true %}
      readOnly: true
{% else %}
      readOnly: false
{% endif %}
{% endfor %}
controllerManager:
  extraArgs:
    {{controllermanager_extra_args | to_nice_yaml(width=512) | indent(4, indentfirst=False)}}
  extraVolumes:
{% for volume in controllermanager_extra_volumes %}
    - name: "{{ volume.name }}"
      mountPath: {{ volume.mountPath }}
{% if volume.pathType == 'File' %}
      hostPath:  {{ volume.hostPath }}
      pathType: File
{% else %}
      hostPath: {{ volume.mountPath }}
      pathType: DirectoryOrCreate
{% endif %}
{% if volume.readOnly == true %}
      readOnly: true
{% else %}
      readOnly: false
{% endif %}
{% endfor %}
scheduler:
  extraArgs:
    {{scheduler_extra_args | to_nice_yaml(width=512) | indent(4, indentfirst=False)}}
  extraVolumes:
{% for volume in scheduler_extra_volumes %}
    - name: "{{ volume.name }}"
      mountPath: {{ volume.mountPath }}
{% if volume.pathType == 'File' %}
      hostPath:  {{ volume.hostPath }}
      pathType: File
{% else %}
      hostPath: {{ volume.mountPath }}
      pathType: DirectoryOrCreate
{% endif %}

{% if volume.readOnly == true %}
      readOnly: true
{% else %}
      readOnly: false
{% endif %}
{% endfor %}
controlPlaneEndpoint: {{ controlplane_endpoint }}
etcd:
  external:
    endpoints:
    - {{ etcd_endpoint }}
    caFile: /etc/etcd/ca.crt
    certFile: /etc/kubernetes/pki/apiserver-etcd-client.crt
    keyFile: /etc/kubernetes/pki/apiserver-etcd-client.key
{% if kubernetes_long_version is version('v1.24.4', '>') %}
dns:
  imageRepository: {{ image_repository + '/coredns'}}
{% endif %}
imageRepository: {{ image_repository }}
kubernetesVersion: {{ kubernetes_long_version }}
networking:
  {{networking_configurations | to_nice_yaml(width=512) | indent(2, indentfirst=False)}}
---
kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
{{kubelet_configurations | to_nice_yaml(width=512) | indent(0, indentfirst=False)}}
