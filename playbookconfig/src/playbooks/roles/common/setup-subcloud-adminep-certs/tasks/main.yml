---
#
# copyright (c) 2020-2022 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# SUB-TASK DESCRIPTION:
#   These tasks set up certificates for https enabled admin endpoints on subcloud
#

- name: Install DC admin endpoint root CA certificate
  copy:
    dest: "/etc/pki/ca-trust/source/anchors/{{ dc_adminep_root_ca_cert }}"
    content: "{{ dc_root_ca_cert | b64decode }}"
    mode: 0400

- name: Set update trusted CA certificate command
  set_fact:
    update_ca_cmd: "{{ ('/usr/sbin/update-ca-certificates --localcertsdir ' + ca_cert_dir) \
                   if os_release == 'debian' else '/usr/bin/update-ca-trust extract' }}"

- name: Update trusted CA certficate list
  command: "{{ update_ca_cmd }}"

- name: Create temporary working directory
  file:
    path: "{{ sc_adminep_temp_dir }}"
    state: directory

- name: Create admin endpoint k8s yaml file
  template:
    src: "setup-sc-adminep-certs.yaml.j2"
    dest: "{{ sc_adminep_temp_dir }}/{{ setup_sc_adminep_certs_yaml }}"

- name: Create Subcloud ICA Issuer and Admin Endpoint Certificate Block
  block:
    - name: Create Subcloud ICA Issuer and Admin Endpoint Certificate
      command: >-
        kubectl --kubeconfig=/etc/kubernetes/admin.conf apply
        -f "{{ sc_adminep_temp_dir }}/{{ setup_sc_adminep_certs_yaml }}"
      register: create_subcloud_ep
      until: create_subcloud_ep is not failed
      retries: 10
      delay: 30

    - name: Wait up to 30s for admin endpoint certificate to be ready
      command: >-
        kubectl --kubeconfig=/etc/kubernetes/admin.conf -n "{{ sc_adminep_ca_cert_ns }}"
        wait --for=condition=ready certificate "{{ sc_adminep_cert_secret }}" --timeout=30s

  rescue:
    - name: System app-list
      shell: "source /etc/platform/openrc; system application-list"
      register: sys_app_list_output
    - debug:
        msg: "{{ sys_app_list_output.stdout_lines }}"

    - name: Get all pods
      command: kubectl --kubeconfig=/etc/kubernetes/admin.conf get pods --all-namespaces -o wide
      register: all_pods_output
    - debug:
        msg: "{{ all_pods_output.stdout_lines }}"

    - name: Get all resouces from cert-manager namespace
      command: kubectl --kubeconfig=/etc/kubernetes/admin.conf get all -n cert-manager -o wide
      register: all_cm_output
    - debug:
        msg: "{{ all_cm_output.stdout_lines }}"

    - name: Get all resources from sc-cert namespace
      command: >-
         kubectl --kubeconfig=/etc/kubernetes/admin.conf get issuers -n sc-cert -o wide;
         kubectl --kubeconfig=/etc/kubernetes/admin.conf get certs -n sc-cert -o wide;
         kubectl --kubeconfig=/etc/kubernetes/admin.conf get secrets -n sc-cert -o wide
      register: all_sc_cert_output
    - debug:
        msg: "{{ all_sc_cert_output.stdout_lines }}"

    - name: Get details of all resouces from cert-manager namespace
      command: kubectl --kubeconfig=/etc/kubernetes/admin.conf get all -n cert-manager -o yaml
      register: all_cm_yaml_output
    - debug:
        msg: "{{ all_cm_yaml_output.stdout_lines }}"

    - name: Get details of all resources from sc-cert namespace
      command: >-
         kubectl --kubeconfig=/etc/kubernetes/admin.conf get issuers -n sc-cert -o yaml;
         kubectl --kubeconfig=/etc/kubernetes/admin.conf get certs -n sc-cert -o yaml;
         kubectl --kubeconfig=/etc/kubernetes/admin.conf get secrets -n sc-cert -o yaml
      register: all_sc_cert_yaml_output
    - debug:
        msg: "{{ all_sc_cert_yaml_output.stdout_lines }}"

    - fail:
        msg: >-
          "Error while creating certificate {{ sc_adminep_cert_secret }}.
          Check resources dumped and the logs from cert-manager pods."

- name: Copy admin endpoint certficates to the shared filesystem directory
  copy:
    src: "{{ item }}"
    dest: "{{ config_permdir }}"
    remote_src: yes
    mode: 0400
  with_items:
    - "/etc/pki/ca-trust/source/anchors/{{ dc_adminep_root_ca_cert }}"

- name: Cleanup temporary working directory
  file:
    path: "{{ sc_adminep_temp_dir }}"
    state: absent
