---
#
# Copyright (c) 2019-2024 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# ROLE DESCRIPTION:
#   This role is to perform tasks that are common to the playbooks.
#

# WARNING: DO NOT ADD NEW TASKS BEFORE L115, nothing should come before the override files import
# and ssh set up since as part of subcloud add, the password change tasks must be executed before
# other commands can be issued.

# Include user override files for a play
- stat:
    path: "{{ item }}"
  register: files_to_import
  with_items:
    - "{{ override_files_dir }}/secrets.yml"
    - "{{ override_files_dir }}/{{ inventory_hostname }}_secrets.yml"
    - "{{ override_files_dir }}/site.yml"
    - "{{ override_files_dir }}/{{ inventory_hostname }}.yml"
  delegate_to: localhost

- include_vars: "{{ item.item }}"
  when: item.stat.exists
  with_items: "{{ files_to_import.results }}"
  no_log: true

# Check host connectivity, change password if provided
- block:
  - name: Check Connectivity
    include_role:
      name: common/check-connectivity

  - block:
    - name: Fail if password change response sequence is not defined
      fail: msg="The mandatory parameter password_change_response is not defined."
      when: (vault_password_change_responses is not defined) and
            (password_change_responses is not defined)

    - block:
      - debug:
          msg: "Changing the initial password.."

      - name: Change initial password
        expect:
          echo: yes
          command: "ssh -p {{ ansible_port }} {{ ansible_ssh_user }}@{{ ansible_host }}"
          responses: "{{ vault_password_change_responses | default(password_change_responses) }}"
          timeout: 150
        register: passwd_change
        failed_when: "passwd_change.rc != 0 and 'successfully' not in passwd_change.stdout"
        delegate_to: localhost

      rescue:
        # Password change timed out. We are not going to fail it here,
        # unless if enforce_password_change is set to true.
        # It should be allowed for instance when initial password has been
        # changed and the user forgot to exclude password_change option
        # in the command line for the replay.
        - name: Fail if host password is not default password post fresh install
          fail:
            msg: "Password change failed. Likely the host has not been re-installed."
          when: enforce_password_change is defined and enforce_password_change

        # It will only reach here if the previous condition is false,
        # so there's no need to check the condition here
        - debug:
            msg: "Timed out or the password has already been changed"

    when: password_change

  when: inventory_hostname != 'localhost'

# Check for Host OS release
- name: Gather Host OS release
  raw: "grep '^NAME=' /etc/os-release | sed s'/NAME=//'"
  register: distro
  changed_when: false

- name: Set OS Release to Debian
  set_fact:
    os_release: "debian"
  when: "'Debian' in distro.stdout"

- name: Set OS Release to Centos
  set_fact:
    os_release: "centos"
  when: "'Debian' not in distro.stdout"

# Evaluate if ansible_become_pass is sysinv user password
- name: Evaluate ansible_become_pass
  shell: "echo {{ ansible_become_pass }} | sudo -S -k -v"
  register: password_check
  no_log: true
  failed_when: false

- name: Check if ansible_become_pass is sysinv user password
  fail: msg="Wrong ansible_become_pass password in your localhost.yml, ansible_become_pass should be sysinv user password"
  when: password_check.rc != 0
