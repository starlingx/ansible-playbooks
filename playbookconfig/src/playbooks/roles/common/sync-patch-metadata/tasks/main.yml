---
#
# Copyright (c) 2022-2023 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# ROLE DESCRIPTION:
#   This role is to synchronize the system controller patching
#   directory to the subcloud. This is only done if the system
#   controller and subcloud are at the same ostree commit.
#

- name: Retrieve software version number
  shell: source /etc/build.info; echo $SW_VERSION
  register: sw_version

- name: Set patch metadata synchronization facts
  set_fact:
    patch_sync_required: false
    ostree_feed_repo_dir: /var/www/pages/feed/rel-{{ sw_version.stdout }}/ostree_repo
    ostree_sysroot_repo_dir: /sysroot/ostree/repo
    ostree_rev: starlingx
    patching_dir: /opt/patching

- name: Gather system controller ostree commit
  command: ostree --repo={{ ostree_feed_repo_dir }} rev-parse {{ ostree_rev }}
  register: ostree_commit_system_controller
  delegate_to: localhost

- name: Gather subcloud ostree commit
  command: ostree --repo={{ ostree_feed_repo_dir }} rev-parse {{ ostree_rev }}
  register: ostree_commit_subcloud

- name: Gather system controller patches list
  shell: sw-patch query | grep {{ sw_version.stdout }} | grep -E '(Available|Applied|Committed)'
  register: system_controller_patch_list
  failed_when: false
  become: yes
  delegate_to: localhost

- name: Gather subcloud patches list
  shell: sw-patch query | grep {{ sw_version.stdout }} | grep -E '(Available|Applied|Committed)'
  register: subcloud_patch_list
  failed_when: false
  become: yes

- name: Decide if patch metadata synchronization is required
  # Conditions:
  # 1) the system controller and subcloud have different results from 'sw-patch query'
  # or
  # 2) The subcloud is not be at the same patch level as the system controller.
  # This can happen if the subcloud is installed from ISO (release or prestage).
  set_fact:
    patch_sync_required: true
  when: (system_controller_patch_list.stdout != subcloud_patch_list.stdout)
      and (ostree_commit_system_controller.stdout == ostree_commit_subcloud.stdout)

- debug:
    msg:
      - "Patch sync required: {{ patch_sync_required }}"
      - "ostree revision from {{ ostree_feed_repo_dir }}:"
      - "system controller: {{ ostree_commit_system_controller.stdout }}"
      - "subcloud:          {{ ostree_commit_subcloud.stdout }}"
      - "Patches list:"
      - "system controller:"
      - "{{ system_controller_patch_list.stdout }}"
      - "subcloud:"
      - "{{ subcloud_patch_list.stdout }}"

- debug:
    msg:
      - "Skipping patch metadata synchronization."
  when: not patch_sync_required

- block:
  - debug:
      msg: "Synchronizing {{ patching_dir }} metadata to subcloud..."

  - name: Ensure subcloud {{ patching_dir }} exists (sysadmin)
    file:
      path: "{{ patching_dir }}"
      owner: sysadmin
      group: root
      state: directory
      mode: 0755
      recurse: yes
    become: yes

  - name: Synchronize patching dir from system controller to subcloud
    synchronize:
      mode: push
      src: "{{ patching_dir }}/"
      dest: "{{ patching_dir }}/"
      rsync_opts: "--delete"
    register: patching_transfer
    retries: 2
    delay: 5
    until: patching_transfer.rc == 0

  - name: Restore root ownership to subcloud {{ patching_dir }}
    file:
      path: "{{ patching_dir }}"
      state: directory
      owner: root
      recurse: yes
    become: yes

  - name: Delete patch metadata files not belonging to the current software version
          ({{ sw_version.stdout }})
    shell: >
      grep -L "<sw_version>{{ sw_version.stdout }}</sw_version>" {{ item }}
      | xargs -I {} sh -c 'echo "$1"; rm -f "$1"' sh {}
    loop:
      - "{{ patching_dir }}/metadata/applied/*"
      - "{{ patching_dir }}/metadata/available/*"
      - "{{ patching_dir }}/metadata/committed/*"
    register: deleted_metadata_files
    become: yes

  - name: Print deleted patch metadata files
    debug:
      msg: "{{ deleted_metadata_files.results | map(attribute='stdout_lines')
            | flatten | join('\n') }}"
    when: deleted_metadata_files.results | map(attribute='stdout_lines')
          | flatten | length > 0

  # Restart the patch controller to pickup the changes
  - name: Restart the patch controller
    systemd:
      name: "{{ item }}"
      state: restarted
    with_items:
      - sw-patch-controller-daemon
    become: yes

  when: patch_sync_required
