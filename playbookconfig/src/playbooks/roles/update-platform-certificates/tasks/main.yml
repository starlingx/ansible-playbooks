---
#
# Copyright (c) 2021-2024 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# These tasks perform a clean installation of platform certificates with
# cert-manager ( rest-api/https, registry.local and oidc-auth-app )
#
# Before installing new certificates, a backup of old ones is saved to
# /home/sysadmin/certificates_backup/ in case they are needed
#
# The RCA that signs the ICA that is used to issue the certificates created
# is also installed to the platform as a Trusted CA
#
# For oidc-auth-app certificate an application-apply is also performed
# in order to restart the application with the new certificate
#
- name: Install / Update cert-manager certificate
  block:
    - name: Check for management affecting alarms
      include_tasks: check-for-management-alarms.yml
      when: ignore_alarms is undefined or ignore_alarms | bool == False

    - name: Verify 'system-local-ca' certs
      include_role:
        name: common/verify-and-install-system-local-ca-certs
      vars:
        - install_rca: false

    - name: Check certificates to be installed
      include_tasks: check-certificates-to-be-installed.yml

    - name: Get new backup directory
      tempfile:
        state: directory
        path: /home/sysadmin/
        prefix: certificates_backup_
      register: backup_directory

    - name: Backup current registry.local and rest-api-https certificates
      copy:
        remote_src: true
        src: /etc/ssl/private/{{item}}
        dest: "{{ backup_directory.path }}/{{item}}"
      with_items:
        - registry-cert.crt
        - server-cert.pem
      become: true
      failed_when: false

    - name: Backup current local-dex.tls secret
      shell: >-
        kubectl --ignore-not-found=true
        get secret local-dex.tls -n kube-system -o yaml
        > {{ backup_directory.path }}/local-dex.tls.yaml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      register: bkp_secret_ep
      until: bkp_secret_ep is not failed
      retries: 3
      delay: 30

    - name: Generate kubernetes yaml for cert-manager resources
      include_role:
        name: common/generate-platform-certificates-template
      vars:
        destination: "{{ cert_manager_spec_file }}"

    - name: Retrieve certificates that may own system-local-ca secret
      shell: >-
        kubectl get certificates -A
        -o=custom-columns='SECRET:spec.secretName','NAME:metadata.name','NAMESPACE:metadata.namespace'
        --no-headers=true |
        awk '$1 == "system-local-ca"' |
        awk '{ print "{name: "$2", namespace: "$3", type: certificate}" }'
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      register: cert_to_remove

    - name: Dump system-local-ca secret (to recover if necessary)
      command: kubectl get secret -n cert-manager system-local-ca -o yaml --ignore-not-found=true
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      register: system_local_ca_dump
      no_log: true

    - name: Delete certificate that owns the secret 'system-local-ca' if it exists
      include_role:
        name: common/delete-kubernetes-resources
      when: cert_to_remove.stdout | length > 0
      loop: "{{ cert_to_remove.stdout_lines | map('from_yaml') | list }}"

    - name: Delete the 'system-local-ca' clusterIssuer and secret if they exist
      include_role:
        name: common/delete-kubernetes-resources
      with_items:
        - { name: system-local-ca, namespace: cert-manager, type: clusterissuer }
        - { name: system-local-ca, namespace: cert-manager, type: secret }

    - name: Remove default leaf certificates
      include_role:
        name: common/delete-kubernetes-resources
      with_items:
        - { name: system-openldap-local-certificate, namespace: deployment, type: certificate }
        - { name: system-registry-local-certificate, namespace: deployment, type: certificate }
        - { name: system-restapi-gui-certificate, namespace: deployment, type: certificate }

    - name: Remove OIDC certificate if we are recreating it
      include_role:
        name: common/delete-kubernetes-resources
      with_items:
        - { name: oidc-auth-apps-certificate, namespace: kube-system, type: certificate }
      when: install_oidc_auth_apps_certificate

    # This list is composed of other certificates issued by the cluster issuer
    # (i.e. not local REST API/GUI, OpenLDAP, Docker Registry or OIDC)
    - name: List other certificates that should be migrated to the new 'system-local-ca' issuer
      shell: |
        #Collecting certs previously issued by 'system-local-ca'
        {(kubectl get certificates -A \
        -o=custom-columns='SECRET:spec.secretName','NAMESPACE:metadata.namespace','ISSUER:spec.issuerRef.name' \
        --no-headers=true |
        awk '$3 == "system-local-ca"' |
        awk '{ print "{name: "$1", namespace: "$2", type: secret}" }' |
        awk NF)}
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      register: certs_to_renew

    - name: Apply kubernetes yaml to create cert-manager clusterissuer and certificates
      command: kubectl apply -f "{{ cert_manager_spec_file }}"
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      register: create_k8_apply_ep
      until: create_k8_apply_ep is not failed
      retries: 10
      delay: 30

    - name: Force certificate renewals by deleting their secrets
      include_role:
        name: common/delete-kubernetes-resources
      loop: "{{ certs_to_renew.stdout_lines | map('from_yaml') | unique | list }}"

    - name: Wait for local OpenLDAP certificate to be Ready
      command: >-
        kubectl wait certificate -n deployment system-openldap-local-certificate
        --for=condition=Ready --timeout=90s
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      when: install_system_open_ldap_certificate

    - name: Install Root CA certificate as trusted by the platform
      include_role:
        name: common/verify-and-install-system-local-ca-certs
      vars:
        - install_rca: true

    - name: Restart kube-apiserver to pick the new certificate
      include_role:
        name: common/restart-kube-apiserver

    - name: Update oidc-auth-apps in order to use new certificate
      include_tasks: reapply-oidc-auth-app.yml
      when: oidc_applied.stdout | bool

    - name: Update ipsec certificates
      block:
      - name: Get PXEBoot network list addresses
        script: roles/common/files/get_pxeboot_addr_list.py
        register: ip_addrs_list_result

      - set_fact:
          failures_list: []

      - name: Create root CA crt temporary file
        tempfile:
          state: file
          prefix: root_ca_
          suffix: .crt
          path: /tmp/
        register: root_ca_cert

      - name: Create local CA crt temporary file
        tempfile:
          state: file
          prefix: ca_
          suffix: .crt
          path: /tmp/
        register: local_ca_cert

      - name: Copy CAs certificates to temporary files
        copy:
          dest: "{{ item.path }}"
          content: "{{ item.secret | b64decode }}"
        no_log: true
        loop:
          - path: "{{ root_ca_cert.path }}"
            secret: "{{ system_root_ca_cert }}"
          - path: "{{ local_ca_cert.path }}"
            secret: "{{ system_local_ca_cert }}"

      - name: Update IPSec certificates
        include_tasks: update_ipsec_certificates_in_hosts.yaml
        loop: "{{ ip_addrs_list_result.stdout }}"

      - name: Failed to update IPSec certificates on nodes
        debug:
          msg: "{{ failures_list | join('\n') }}"
        when: 'failures_list | length > 0'

      always:
        - name: Cleanup temporary certificate files
          file:
            state: absent
            path: "{{ item }}"
          become: yes
          loop:
            - "{{ root_ca_cert.path }}"
            - "{{ local_ca_cert.path }}"

  rescue:
    - name: Check if system-local-ca is in place
      command: >-
        kubectl get secret -n cert-manager system-local-ca --ignore-not-found=true --no-headers=true
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      register: system_local_ca_get
      no_log: true

    - name: Recover previous system-local-ca secret
      shell: kubectl apply -f <(echo '{{ system_local_ca_dump.stdout }}')
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      register: create_k8_apply_ep
      until: create_k8_apply_ep is not failed
      retries: 10
      delay: 30
      no_log: true
      when: system_local_ca_get.stdout == ""

    - block:
      - debug:
          msg: >-
            Failed to migrate platform certificates to cert-manager.
            Please find backups of the previous certificates in {{ backup_directory.path }}.

      - name: Show backups of certificates
        command: ls -lR {{ backup_directory.path }}
        register: certs_output

      - debug:
          msg: "{{ certs_output.stdout_lines }}"

      - fail:
          msg: "Error occurred. Please check failed steps."

      when: backup_directory is defined

  always:
    - name: Delete kubernetes yaml with certificate spec
      file:
        path: "{{ cert_manager_spec_file }}"
        state: absent
      become: yes

  when: mode == 'update'

# This mode is here to aid in testing,
# so that it's easy to delete all cert-manager objects
# and switch back to the self-signed certificates
#
# This should be used for testing purposes only
#
- name: Delete cert-manager resources
  block:
    - name: Delete clusterissuer
      command: >-
        kubectl --ignore-not-found=true
        delete clusterissuer system-local-ca
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      register: clusterissuer_output
      until: clusterissuer_output is not failed
      retries: 3
      delay: 3

    - name: Delete certificates
      include_role:
        name: common/delete-kubernetes-resources
      with_items:
        - { name: system-registry-local-certificate, namespace: deployment, type: certificate }
        - { name: system-restapi-gui-certificate, namespace: deployment, type: certificate }

    - name: Delete secrets
      include_role:
        name: common/delete-kubernetes-resources
      with_items:
        - { name: system-registry-local-certificate, namespace: deployment, type: secret }
        - { name: system-restapi-gui-certificate, namespace: deployment, type: secret }

    - debug:
        msg: >-
          Delete mode for oidc-auth-apps certificate is not well supported.
          Delete it manually if you need it.

  when: mode == 'delete'

# To be run after certificate migration to visually check execution
- name: Gets a summary of certificates on system
  block:
    - name: Check certificates to be installed
      include_tasks: check-certificates-to-be-installed.yml

    - name: Get summary of certificates installed
      include_tasks: get-certificates-summary.yml
      with_items:
        - {
          secret: system-registry-local-certificate,
          namespace: deployment,
          should_run: "{{ install_system_registry_local_certificate }}"
        }
        - {
          secret: system-restapi-gui-certificate,
          namespace: deployment,
          should_run: "{{ install_system_restapi_gui_certificate }}"
        }
        - {
          secret: oidc-auth-apps-certificate,
          namespace: kube-system,
          should_run: "{{ install_oidc_auth_apps_certificate }}"
        }
        - {
          secret: system-openldap-local-certificate,
          namespace: deployment,
          should_run: "{{ install_system_open_ldap_certificate }}"
        }

  when: mode == 'check'
