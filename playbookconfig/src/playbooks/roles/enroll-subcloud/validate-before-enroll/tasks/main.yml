---
#
# Copyright (c) 2024 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
#   This role is to validate the target host environment before proceeding
#   to the next step.
#

- name: Initialize some facts to be used in subsequent roles/tasks
  set_fact:
    use_docker_proxy: false
    use_default_registries: true
    k8s_registry: "{{ default_k8s_registry }}"
    gcr_registry: "{{ default_gcr_registry }}"
    quay_registry: "{{ default_quay_registry }}"
    docker_registry: "{{ default_docker_registry }}"
    elastic_registry: "{{ default_elastic_registry }}"
    ghcr_registry: "{{ default_ghcr_registry }}"
    registryk8s_registry: "{{ default_registryk8s_registry }}"
    icr_registry: "{{ default_icr_registry }}"

- name: Turn on use_docker_proxy flag
  set_fact:
    use_docker_proxy: true
  when: (docker_http_proxy is defined and docker_http_proxy is not none) or
        (docker_https_proxy is defined and docker_https_proxy is not none)

- name: Set default registries dictionary to central registry
  set_fact:
    default_docker_registries:
      k8s.gcr.io:
        url: "{{ central_registry }}/k8s.gcr.io"
      gcr.io:
        url: "{{ central_registry }}/gcr.io"
      quay.io:
        url: "{{ central_registry }}/quay.io"
      docker.io:
        url: "{{ central_registry }}/docker.io"
      docker.elastic.co:
        url: "{{ central_registry }}/docker.elastic.co"
      ghcr.io:
        url: "{{ central_registry }}/ghcr.io"
      registry.k8s.io:
        url: "{{ central_registry }}/registry.k8s.io"
      icr.io:
        url: "{{ central_registry }}/icr.io"

- name: Save the list of user defined registry keys
  set_fact:
    user_defined_registry_keys: "{{ docker_registries.keys() | list }}"

- name: Merge user and default registries dictionaries
  set_fact:
    docker_registries: "{{ default_docker_registries | combine(docker_registries) }}"

- debug:
    msg: "Docker registries: {{ docker_registries }}"

- name: Validate registry configurations
  import_role:
    name: common/validate-registries

# TODO(yuxing) uncomment the following block when the admin network can be configured
# during factory installation. Task: 50089
# - name: Validate admin network configuration
#   block:
#   - name: Fail if admin network configuration not specified
#     fail:
#       msg: "Admin_subnet or admin_gateway_address is not defined in bootstrap values."
#     when: admin_network is not defined
#
- name: Initialize address pairs secondary
  set_fact:
    address_pairs_secondary: { }

- name: Validate admin network configuration
  block:
  - name: Build admin address primary pairs for validation
    set_fact:
      address_pairs:
        admin:
          start:
            "{{ network_params.admin_start_address_primary if admin_start_address != 'derived'
            else default_admin_start_address_primary }}"
          end:
            "{{ network_params.admin_end_address_primary if admin_end_address != 'derived'
            else default_admin_end_address_primary }}"
          subnet: "{{ network_params.admin_subnet_primary }}"

  - include_tasks: roles/common/validate-addresses/tasks/validate_address_range.yml
    with_dict: "{{ address_pairs }}"

  # admin secondary pairs validation if defined
  - block:
    - name: Build admin address secondary pairs for validation
      set_fact:
        admin_pairs_secondary:
          admin:
            start:
              "{{ network_params.admin_start_address_secondary if admin_start_address != 'derived'
              else default_admin_start_address_secondary }}"
            end:
              "{{ network_params.admin_end_address_secondary if admin_end_address != 'derived'
              else default_admin_end_address_secondary }}"
            subnet: "{{ network_params.admin_subnet_secondary }}"

    - include_tasks: roles/common/validate-addresses/tasks/validate_address_range.yml
      with_dict: "{{ admin_pairs_secondary }}"

    - name: Group secondary address pairs
      set_fact:
        address_pairs_secondary: "{{ address_pairs_secondary |combine({item.key: item.value}) }}"
      with_dict: "{{ admin_pairs_secondary }}"
    when: network_params.admin_subnet_secondary
  when: admin_network is defined

- name: Validate oam secondary network configuration
  block:
  - name: Build oam address secondary pairs for validation
    set_fact:
      oam_address_pairs_secondary:
        oam:
          start:
            "{{ network_params.external_oam_start_address_secondary if external_oam_start_address != 'derived'
            else default_external_oam_start_address_secondary }}"
          end:
            "{{ network_params.external_oam_end_address_secondary if external_oam_end_address != 'derived'
            else default_external_oam_end_address_secondary }}"
          subnet: "{{ network_params.external_oam_subnet_secondary }}"
        oam_node:
          start: "{{ derived_network_params.oam_node_0_address_secondary }}"
          end: "{{ derived_network_params.oam_node_1_address_secondary }}"
          subnet: "{{ network_params.external_oam_subnet_secondary }}"

  - include_tasks: roles/common/validate-addresses/tasks/validate_address_range.yml
    with_dict: "{{ oam_address_pairs_secondary }}"

  - name: Group secondary address pairs
    set_fact:
      address_pairs_secondary: "{{ address_pairs_secondary |combine({item.key: item.value}) }}"
    with_dict: "{{ oam_address_pairs_secondary }}"
  when: network_params.external_oam_subnet_secondary

- name: Wait until cloud-init finalized reconfiguration
  wait_for:
    path: "{{ enroll_init_finalized }}"
    state: present
    timeout: 900
    msg: >-
      Timeout waiting for cloud-init finalizing reconfiguration. Check the
      cloud-init-output.log on the subcloud for the reason.
