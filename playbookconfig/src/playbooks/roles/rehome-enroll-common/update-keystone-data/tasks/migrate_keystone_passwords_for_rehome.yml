---
#
# Copyright (c) 2021-2024 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# SUB-TASKS DESCRIPTION:
#   These tasks update docker registry credentials, keystone passwords in keystone
#   database, secure hieradata, relevant service config files as well as service
#   passwords in keyring.
#

- name: Update keystone user passwords
  include_tasks: update_keystone_user_password_for_rehome.yml
  vars:
    username: "{{ item.username }}"
    password: "{{ item.password }}"
    service: "{{ item.service }}"
  loop: "{{ user_list }}"
  no_log: true

- name: Store sysinv service password in keyring
  vars:
    script_content: |
      import keyring
      import os
      os.environ['XDG_DATA_HOME'] = "/opt/platform/.keyring/{{ software_version }}"
      keyring.set_password("sysinv", "services", "{{ users['sysinv'] }}")
  shell: "{{ script_content }}"
  args:
    executable: /usr/bin/python
  no_log: true

# There's a race condition that the sysinv conductor running with the old sysinv
# password may not able to get the openstack users list after updating the new
# sysinv password in keystone. Manually update the password and reload the services
# on controller-0 to ensure the sysinv servies are running with new password.
- name: Update sysinv password in configuration on the active controller
  lineinfile:
    path: "{{ item }}"
    regexp: "^password=.*$"
    line: "password={{ users['sysinv'] }}"
  loop:
    - "/etc/sysinv/sysinv.conf"
    - "/etc/sysinv/api-paste.ini"
    - "/etc/sysinv/cert-mon.conf"
    - "/etc/sysinv/cert-alarm.conf"
  no_log: true

- name: Update sysinv password in keystone
  shell: >-
    source /etc/platform/openrc;
    openstack user set 'sysinv' --password $'{{ users['sysinv'] }}';

- name: Restart sysinv services to update the config in controller-0
  command: sm-restart-safe service "{{ item }}"
  loop:
    - "sysinv-inv"
    - "sysinv-conductor"
    - "cert-alarm"
    - "cert-mon"

- name: Check sysinv-conductor related services enabled
  shell: sm-query service '{{ item }}' | grep -c enabled-active
  loop:
    - "sysinv-inv"
    - "cert-mon"
    - "cert-alarm"
    - "sysinv-conductor"
  register: service_status
  until: service_status.stdout == '1'
  retries: 12
  delay: 10

- block:
  # the sysinv password is expected to be updated on controller-0 at this moment,
  # leveraging the healthy sysinv-conductor to update the config in controller-1
  - name: Store the sysinv old config uuid of controller-0
    shell: source /etc/platform/openrc; system host-show controller-0
            | grep -i "config_applied"
    register: c0_old_config_uuid

  - name: Store the sysinv old config uuid of controller-1
    shell: source /etc/platform/openrc; system host-show controller-1
            | grep -i "config_applied"
    register: c1_old_config_uuid

  - name: Updating sysinv password to trigger manifest updating controller-1
    shell: >-
      source /etc/platform/openrc;
      openstack user set 'sysinv' --password $'{{ users['sysinv'] }}';

  - name: Wait for sysinv agent to apply sysinv::password::runtime on controller-0
    shell: source /etc/platform/openrc; system host-show controller-0
            | grep -i "config_applied"
    register: c0_new_config_uuid
    until: c0_old_config_uuid.stdout != c0_new_config_uuid.stdout
    retries: 30
    delay: 10

  - name: Wait for sysinv agent to apply sysinv::password::runtime on controller-1
    shell: source /etc/platform/openrc; system host-show controller-1
            | grep -i "config_applied"
    register: c1_new_config_uuid
    until: c1_old_config_uuid.stdout != c1_new_config_uuid.stdout
    retries: 18
    delay: 10
  when: system_mode != "simplex"

- name: Update docker registry credentials
  command: "update_docker_registry_auth.sh 'sysinv' '{{ users['sysinv'] }}'"
  no_log: true
