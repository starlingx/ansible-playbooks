---
#
# Copyright (c) 2024 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
#   This playbook updates keystone passwords during subcloud enrollment
#

- name: Create a temporary file for user list
  ansible.builtin.tempfile:
    state: file
    prefix: "keystone_user_list_"
  register: temp_keystone_pass_file

- name: Write user list to a temporary file
  copy:
    content: "{{ user_list | to_nice_json }}"
    dest: "{{ temp_keystone_pass_file.path }}"

- name: Check manifest applied and alarm cleared
  shell: |
    source /etc/platform/openrc;
    fm alarm-list --query alarm_id=250.001
  register: alarm_count
  retries: 10
  delay: 30
  until: alarm_count.stdout == ""
  # set as false to allow for a better error message in the fail task below
  failed_when: false

- name: Failed when the manifest apply times out
  fail:
    msg: >-
      Timed out waiting for a previous puppet manifest applied, check the
      puppet.log on the subcloud controller for the reason.
  when: alarm_count.stdout != ""

- name: Update keystone and keyring user passwords
  script: >
    update_keystone_keyring_passwords.py
    {{ software_version }}
    {{ temp_keystone_pass_file.path }}
  register: update_keystone_password_result
  failed_when: false

- debug: var=update_keystone_password_result

- name: Remove the temporary file
  file:
    path: "{{ temp_keystone_pass_file.path }}"
    state: absent

- name: Fail if update keystone password script throws an exception
  fail:
    msg: "Failed to update keystone passwords."
  when: update_keystone_password_result.rc != 0

- name: Check if sysinv password is changed
  shell: >-
    source /etc/platform/openrc;
    export OS_USERNAME='sysinv';
    export OS_PASSWORD='{{ users['sysinv'] }}';
    export OS_PROJECT_NAME=services;
    openstack user list
  register: password_check_result
  ignore_errors: true
  no_log: true

- name: Update sysinv services
  block:
  - name: Store sysinv service password in keyring
    vars:
      script_content: |
        import keyring
        import os
        os.environ['XDG_DATA_HOME'] = "/opt/platform/.keyring/{{ software_version }}"
        keyring.set_password("sysinv", "services", "{{ users['sysinv'] }}")
    shell: "{{ script_content }}"
    args:
      executable: /usr/bin/python
    no_log: true

  - name: Update sysinv password in configuration on the active controller
    lineinfile:
      path: "{{ item }}"
      regexp: "^password=.*$"
      line: "password={{ users['sysinv'] }}"
    loop:
      - "/etc/sysinv/sysinv.conf"
      - "/etc/sysinv/api-paste.ini"
      - "/etc/sysinv/cert-mon.conf"
      - "/etc/sysinv/cert-alarm.conf"
    no_log: true

  - name: Update sysinv password in keystone
    shell: >-
      source /etc/platform/openrc;
      openstack user set 'sysinv' --password $'{{ users['sysinv'] }}';

  - name: Restart sysinv services to update the config in controller-0
    command: sm-restart-safe service "{{ item }}"
    loop:
      - "sysinv-inv"
      - "sysinv-conductor"
      - "cert-alarm"
      - "cert-mon"

  - name: Check sysinv-conductor related services enabled
    shell: sm-query service '{{ item }}' | grep -c enabled-active
    loop:
      - "sysinv-inv"
      - "cert-mon"
      - "cert-alarm"
      - "sysinv-conductor"
    register: service_status
    until: service_status.stdout == '1'
    retries: 12
    delay: 10
  when: >
    password_check_result.rc != 0
