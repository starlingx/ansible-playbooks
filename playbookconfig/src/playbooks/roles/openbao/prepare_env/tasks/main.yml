---
#
# Copyright (c) 2025 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#

- name: Set default target where backup tarball inspection takes place
  set_fact:
    inspection_target: "{{ inventory_hostname }}"

# Set inspection target to Ansible control machine if the backup tarball
# is off-box.
- name: Update target if backup data are off-box
  set_fact:
    inspection_target: localhost
  when: on_box_data|bool == false

- name: Set initial_backup_dir if running on target and no value was supplied
  set_fact:
    initial_backup_dir: /opt/platform-backup
  when:
    - initial_backup_dir is not defined or initial_backup_dir is none
    - on_box_data|bool

- name: Validate initial_backup_dir exists
  stat:
    path: "{{ initial_backup_dir }}"
  delegate_to: "{{ inspection_target }}"
  register: initial_backup_dir_exists

- name: Fail if initial_backup_dir does not exists
  fail:
    msg: "Directory initial_backup_dir: {{ initial_backup_dir }} does not exist"
  when: not initial_backup_dir_exists.stat.exists

- name: Set openbao backup directory fact for on box
  set_fact:
    openbao_backup_dir: "{{ initial_backup_dir }}/openbao"
  when: on_box_data|bool == true

- name: Set openbao backup directory fact for off box
  set_fact:
    openbao_backup_dir: "{{ target_backup_dir }}/openbao"
  when: on_box_data|bool == false

- name: Fail if passphrase is omitted
  fail:
    msg: >
      A passphrase is required for encryption; set variable override
      backup_encryption_passphrase.  To disable encryption set
      override backup_encryption_enabled=false
  when:
  - openbao_encrypt|bool
  - encrypt_openbao_secret | length == 0

- name: Check openbao apply for backup
  block:
  - name: Check if openbao is applied
    shell: |
      source /etc/platform/openrc
      system application-show openbao --format value --column status
    register: openbao_applied_exists

  - name: Fail if openbao is not applied
    fail:
      msg: "Openbao application is not applied"
    when: openbao_applied_exists.stdout != "applied"
  when: openbao_mode == "backup"

- name: Validate openbao health for restore.
  block:
  - name: Transfer backup tarball to {{ target_backup_dir }} on the target
    copy:
      src: "{{ initial_backup_dir }}/{{ backup_filename }}"
      dest: "{{ target_backup_dir }}"
      owner: root
      group: root
      mode: 0755
    become: yes
    when: on_box_data | bool == false

  - name: Set backup file path for on box
    set_fact:
      backup_filepath: "{{ initial_backup_dir }}/{{ backup_filename }}"
    when: on_box_data | bool == true

  - name: Set backup file path for off box
    set_fact:
      backup_filepath: "{{ target_backup_dir }}/{{ backup_filename }}"
    when: on_box_data | bool == false

  - name: Find backup tarball
    shell: |
      ls {{ backup_filepath }}
    register: backup_tarball

  - name: Fail if openbao backup tarball not found
    fail:
      msg: "Openbao snapshot tarball: {{ backup_filename }} was not found"
    when: backup_tarball.stdout | length == 0

  - name: Run application validation
    block:
    - name: Validate if openbao application is ready to be restored
      script: validate_recover_openbao.sh
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      register: validate_openbao_result
      failed_when: validate_openbao_result.rc != 0
    always:
    - name: Display openbao validation script output if it exists
      debug:
        msg: "{{ validate_openbao_result.stdout }}"
      when: validate_openbao_result is defined
  when: openbao_mode == "restore"

- name: Find openbao manager pod
  shell: >-
    kubectl get pods -n openbao | grep "openbao-manager" | cut -d " " -f 1
  register: openbao_manager_pod_name
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Fail if openbao manager pod is not found
  fail:
    msg: "Openbao manager pod is not found"
  when: openbao_manager_pod_name.stdout | length == 0

- name: Create openbao subdirectory in initial_backup_dir
  file:
    path: "{{ openbao_backup_dir }}"
    state: directory
    mode: 0755
  become: yes
