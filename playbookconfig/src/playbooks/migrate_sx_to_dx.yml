---
#
# Copyright (c) 2021-2025 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# This playbook provides the capability to migrate a subcloud from
# AIO-SX to AIO-DX. It will lock the subcloud, perform the necessary
# configuration updates, then unlock the subcloud. NOTE: This is for a
# non-ceph subcloud.
#
# To run the playbook, the user would define an overrides file that
# provides the required variable settings, passing this on the ansible
# command-line.
# (see migrate-subcloud1-overrides-EXAMPLE.yml)
#
# Example command:
# ansible-playbook /usr/share/ansible/stx-ansible/playbooks/migrate_sx_to_dx.yml \
#     -e @migrate-subcloud1-overrides.yml -i subcloud1, -v
#

- hosts: all
  gather_facts: no

  tasks:
    - name: Check required parameters
      debug:
        msg:
        - "Validating required migration parameters:"
        - "ansible_ssh_pass: {{ ansible_ssh_pass | regex_replace('.', '*') }}"
        - "external_oam_node_0_address: {{ external_oam_node_0_address|mandatory }}"
        - "external_oam_node_1_address: {{ external_oam_node_1_address|mandatory }}"
        - "external_oam_addrpool_name: {{ external_oam_addrpool_name|mandatory }}"
        - "management_node_0_address: {{ management_node_0_address|mandatory }}"
        - "management_node_1_address: {{ management_node_1_address|mandatory }}"
        - "management_addrpool_name: {{ management_addrpool_name|mandatory }}"
        - "cluster_host_node_0_address: {{ cluster_host_node_0_address|mandatory }}"
        - "cluster_host_node_1_address: {{ cluster_host_node_1_address|mandatory }}"
        - "cluster_host_addrpool_name: {{ cluster_host_addrpool_name|mandatory }}"
        - "pxeboot_node_0_address: {{ pxeboot_node_0_address|mandatory }}"
        - "pxeboot_node_1_address: {{ pxeboot_node_1_address|mandatory }}"
        - "pxeboot_addrpool_name: {{ pxeboot_addrpool_name|mandatory }}"
      failed_when: (ansible_ssh_pass | length == 0) or
                   (external_oam_node_0_address | length == 0) or
                   (external_oam_node_1_address | length == 0) or
                   (external_oam_addrpool_name | length == 0) or
                   (management_node_0_address | length == 0) or
                   (management_node_1_address | length == 0) or
                   (management_addrpool_name | length == 0) or
                   (cluster_host_node_0_address | length == 0) or
                   (cluster_host_node_1_address | length == 0) or
                   (cluster_host_addrpool_name | length == 0) or
                   (pxeboot_node_0_address | length == 0) or
                   (pxeboot_node_1_address | length == 0) or
                   (pxeboot_addrpool_name | length == 0)

    - name: Validate and parse required address parameters
      include_tasks: roles/common/validate-addresses/tasks/validate_and_parse_dual_stack.yml
      with_dict:
        external_oam_node_0_address: "{{ external_oam_node_0_address }}"
        external_oam_node_1_address: "{{ external_oam_node_1_address }}"
        management_node_0_address: "{{ management_node_0_address }}"
        management_node_1_address: "{{ management_node_1_address }}"
        cluster_host_node_0_address: "{{ cluster_host_node_0_address }}"
        cluster_host_node_1_address: "{{ cluster_host_node_1_address }}"
        pxeboot_node_0_address: "{{ pxeboot_node_0_address }}"
        pxeboot_node_1_address: "{{ pxeboot_node_1_address }}"
      loop_control:
        loop_var: network_param

    - name: Validate and parse required addrpool parameters
      set_fact:
        dual_stack_network_params: >-
          {{
            dual_stack_network_params | default({}) | combine
            (
              {
                 item.key+'_primary': item.value.split(',')[0],
                 item.key+'_secondary': item.value.split(',')[1]|default(False),
              }
            )
          }}
      with_dict:
        external_oam_addrpool_name: "{{ external_oam_addrpool_name }}"
        management_addrpool_name: "{{ management_addrpool_name }}"
        cluster_host_addrpool_name: "{{ cluster_host_addrpool_name }}"
        pxeboot_addrpool_name: "{{ pxeboot_addrpool_name }}"

    - name: Validate and parse admin address parameters
      include_tasks: roles/common/validate-addresses/tasks/validate_and_parse_dual_stack.yml
      with_dict:
        admin_node_0_address: "{{ admin_node_0_address }}"
        admin_node_1_address: "{{ admin_node_1_address }}"
      loop_control:
        loop_var: network_param
      when: admin_node_0_address is defined and admin_node_1_address is defined

    - name: Validate and parse admin addrpool parameters
      set_fact:
        dual_stack_network_params: >-
          {{
            dual_stack_network_params | default({}) | combine
            (
              {
                 item.key+'_primary': item.value.split(',')[0],
                 item.key+'_secondary': item.value.split(',')[1]|default(False),
              }
            )
          }}
      with_dict:
        admin_addrpool_name: "{{ admin_addrpool_name }}"
      when: admin_node_0_address is defined and admin_node_1_address is defined

    - name: Validate and parse storage address parameters
      include_tasks: roles/common/validate-addresses/tasks/validate_and_parse_dual_stack.yml
      with_dict:
        storage_node_0_address: "{{ storage_node_0_address }}"
        storage_node_1_address: "{{ storage_node_1_address }}"
      loop_control:
        loop_var: network_param
      when: storage_node_0_address is defined and storage_node_1_address is defined

    - name: Validate and parse storage addrpool parameters
      set_fact:
        dual_stack_network_params: >-
          {{
            dual_stack_network_params | default({}) | combine
            (
              {
                 item.key+'_primary': item.value.split(',')[0],
                 item.key+'_secondary': item.value.split(',')[1]|default(False),
              }
            )
          }}
      with_dict:
        storage_addrpool_name: "{{ storage_addrpool_name }}"
      when: storage_node_0_address is defined and storage_node_1_address is defined

    - name: Check primary pool address type
      set_fact:
        is_primary_ipv6: "{{ dual_stack_network_params.external_oam_node_0_address_primary|ipv6 }}"

    - name: Query current address-pool list
      shell: |
        source /etc/platform/openrc
        system addrpool-list --nowrap | awk '$8 ~/^[0-9]+$/ { print $4,$2,$16,$18 }'
      register: addrpool_output
      failed_when: addrpool_output.rc != 0

    - name: Set address-pool info
      set_fact:
        addrpools: >-
          {{
            addrpools | default([]) +
            [
              {
                'name': item.split()[0],
                'uuid': item.split()[1],
                'c0_ip': item.split()[2],
                'c1_ip': item.split()[3],
              }
            ]
          }}
      loop: "{{ addrpool_output.stdout_lines }}"

    - name: Query management interface configuration
      shell: |
        source /etc/platform/openrc
        system interface-network-list controller-0 --nowrap | awk '$8 == "mgmt" { print $6 }'
      register: mgmt_if

    - name: Query cluster-host interface configuration
      shell: |
        source /etc/platform/openrc
        system interface-network-list controller-0 --nowrap | awk '$8 == "cluster-host" { print $6 }'
      register: cluster_host_if

    - name: Get subcloud admin network name
      shell: >-
        source /etc/platform/openrc; system network-list |
        awk '$8 == "admin" { print $6 }'
      register: subcloud_admin_network_name

    - name: Query admin interface configuration
      shell: |
        source /etc/platform/openrc
        system interface-network-list controller-0 --nowrap |
        awk '$8 == "{{ subcloud_admin_network_name.stdout }}" { print $6 }'
      register: admin_if

    - name: Validate network interface configuration
      fail:
        msg: |
          The cluster-host, management and (optional) admin networks cannot
          be on the loopback interface for simplex to duplex migration
      when: mgmt_if.stdout == 'lo' or
            cluster_host_if.stdout == 'lo' or
            admin_if.stdout == 'lo'

    - set_fact:
        ansible_port: "{{ ansible_port | default(22) }}"
        ansible_host: "{{ inventory_hostname }}"
        duplex_mode: "{{ duplex_mode | default('duplex') }}"
        kubernetes_duplex_migration_flag: '/var/run/.kubernetes_duplex_migration_complete'

    - name: Query system_mode
      shell: source /etc/platform/openrc; system show | awk '$2 == "system_mode" { print $4 }'
      register: current_system_mode

    - name: Prepare OAM configuration - addrpool name
      set_fact:
        oam_addrpool_ipv4: "{{ dual_stack_network_params.external_oam_addrpool_name_primary if not is_primary_ipv6
                           else dual_stack_network_params.external_oam_addrpool_name_secondary }}"
        oam_addrpool_ipv6: "{{ dual_stack_network_params.external_oam_addrpool_name_primary if is_primary_ipv6
                           else dual_stack_network_params.external_oam_addrpool_name_secondary }}"

    - name: Prepare OAM configuration
      set_fact:
        oam_uuid_ipv4: "{{ (addrpools |
                          selectattr('name', 'equalto', oam_addrpool_ipv4) |
                          list | first)['uuid']|default(omit) }}"
        oam_uuid_ipv6: "{{ (addrpools |
                          selectattr('name', 'equalto',oam_addrpool_ipv6) |
                          list | first)['uuid']|default(omit) }}"
        current_oam_c0_ipv4: "{{ (addrpools |
                          selectattr('name', 'equalto', oam_addrpool_ipv4) |
                          list | first)['c0_ip']|default(omit) }}"
        current_oam_c0_ipv6: "{{ (addrpools |
                          selectattr('name', 'equalto',oam_addrpool_ipv6) |
                          list | first)['c0_ip']|default(omit) }}"
        current_oam_c1_ipv4: "{{ (addrpools |
                          selectattr('name', 'equalto', oam_addrpool_ipv4) |
                          list | first)['c1_ip']|default(omit) }}"
        current_oam_c1_ipv6: "{{ (addrpools |
                          selectattr('name', 'equalto',oam_addrpool_ipv6) |
                          list | first)['c1_ip']|default(omit) }}"
        new_oam_c0_ipv4: "{{ dual_stack_network_params.external_oam_node_0_address_primary if not is_primary_ipv6
                        else dual_stack_network_params.external_oam_node_0_address_secondary }}"
        new_oam_c0_ipv6: "{{ dual_stack_network_params.external_oam_node_0_address_primary if is_primary_ipv6
                        else dual_stack_network_params.external_oam_node_0_address_secondary }}"
        new_oam_c1_ipv4: "{{ dual_stack_network_params.external_oam_node_1_address_primary if not is_primary_ipv6
                        else dual_stack_network_params.external_oam_node_1_address_secondary }}"
        new_oam_c1_ipv6: "{{ dual_stack_network_params.external_oam_node_1_address_primary if is_primary_ipv6
                        else dual_stack_network_params.external_oam_node_1_address_secondary }}"

    - name: Prepare management configuration - addrpool name
      set_fact:
        mgmt_addrpool_ipv4: "{{ dual_stack_network_params.management_addrpool_name_primary if not is_primary_ipv6
                           else dual_stack_network_params.management_addrpool_name_secondary }}"
        mgmt_addrpool_ipv6: "{{ dual_stack_network_params.management_addrpool_name_primary if is_primary_ipv6
                           else dual_stack_network_params.management_addrpool_name_secondary }}"

    - name: Prepare management configuration
      set_fact:
        mgmt_uuid_ipv4: "{{ (addrpools |
                          selectattr('name', 'equalto', mgmt_addrpool_ipv4) |
                          list | first)['uuid']|default(omit) }}"
        mgmt_uuid_ipv6: "{{ (addrpools |
                          selectattr('name', 'equalto', mgmt_addrpool_ipv6) |
                          list | first)['uuid']|default(omit) }}"
        current_mgmt_c0_ipv4: "{{ (addrpools |
                          selectattr('name', 'equalto', mgmt_addrpool_ipv4) |
                          list | first)['c0_ip']|default(omit) }}"
        current_mgmt_c0_ipv6: "{{ (addrpools |
                          selectattr('name', 'equalto', mgmt_addrpool_ipv6) |
                          list | first)['c0_ip']|default(omit) }}"
        current_mgmt_c1_ipv4: "{{ (addrpools |
                          selectattr('name', 'equalto', mgmt_addrpool_ipv4) |
                          list | first)['c1_ip']|default(omit) }}"
        current_mgmt_c1_ipv6: "{{ (addrpools |
                          selectattr('name', 'equalto', mgmt_addrpool_ipv6) |
                          list | first)['c1_ip']|default(omit) }}"
        new_mgmt_c0_ipv4: "{{ dual_stack_network_params.management_node_0_address_primary if not is_primary_ipv6
                        else dual_stack_network_params.management_node_0_address_secondary }}"
        new_mgmt_c0_ipv6: "{{ dual_stack_network_params.management_node_0_address_primary if is_primary_ipv6
                        else dual_stack_network_params.management_node_0_address_secondary }}"
        new_mgmt_c1_ipv4: "{{ dual_stack_network_params.management_node_1_address_primary if not is_primary_ipv6
                        else dual_stack_network_params.management_node_1_address_secondary }}"
        new_mgmt_c1_ipv6: "{{ dual_stack_network_params.management_node_1_address_primary if is_primary_ipv6
                        else dual_stack_network_params.management_node_1_address_secondary }}"

    - name: Prepare admin configuration - addrpool name
      set_fact:
        admin_addrpool_ipv4: "{{ dual_stack_network_params.admin_addrpool_name_primary if not is_primary_ipv6
                           else dual_stack_network_params.admin_addrpool_name_secondary }}"
        admin_addrpool_ipv6: "{{ dual_stack_network_params.admin_addrpool_name_primary if is_primary_ipv6
                           else dual_stack_network_params.admin_addrpool_name_secondary }}"
      when: admin_node_0_address is defined and admin_node_1_address is defined

    - name: Prepare admin configuration
      set_fact:
        admin_uuid_ipv4: "{{ (addrpools |
                          selectattr('name', 'equalto', admin_addrpool_ipv4) |
                          list | first)['uuid']|default(omit) }}"
        admin_uuid_ipv6: "{{ (addrpools |
                          selectattr('name', 'equalto', admin_addrpool_ipv6) |
                          list | first)['uuid']|default(omit) }}"
        current_admin_c0_ipv4: "{{ (addrpools |
                          selectattr('name', 'equalto', admin_addrpool_ipv4) |
                          list | first)['c0_ip']|default(omit) }}"
        current_admin_c0_ipv6: "{{ (addrpools |
                          selectattr('name', 'equalto', admin_addrpool_ipv6) |
                          list | first)['c0_ip']|default(omit) }}"
        current_admin_c1_ipv4: "{{ (addrpools |
                          selectattr('name', 'equalto', admin_addrpool_ipv4) |
                          list | first)['c1_ip']|default(omit) }}"
        current_admin_c1_ipv6: "{{ (addrpools |
                          selectattr('name', 'equalto', admin_addrpool_ipv6) |
                          list | first)['c1_ip']|default(omit) }}"
        new_admin_c0_ipv4: "{{ dual_stack_network_params.admin_node_0_address_primary if not is_primary_ipv6
                        else dual_stack_network_params.admin_node_0_address_secondary }}"
        new_admin_c0_ipv6: "{{ dual_stack_network_params.admin_node_0_address_primary if is_primary_ipv6
                        else dual_stack_network_params.admin_node_0_address_secondary }}"
        new_admin_c1_ipv4: "{{ dual_stack_network_params.admin_node_1_address_primary if not is_primary_ipv6
                        else dual_stack_network_params.admin_node_1_address_secondary }}"
        new_admin_c1_ipv6: "{{ dual_stack_network_params.admin_node_1_address_primary if is_primary_ipv6
                        else dual_stack_network_params.admin_node_1_address_secondary }}"
      when: admin_node_0_address is defined and admin_node_1_address is defined

    - name: Prepare cluster-host configuration - addrpool name
      set_fact:
        cluster_host_addrpool_ipv4: "{{ dual_stack_network_params.cluster_host_addrpool_name_primary if not is_primary_ipv6
                           else dual_stack_network_params.cluster_host_addrpool_name_secondary }}"
        cluster_host_addrpool_ipv6: "{{ dual_stack_network_params.cluster_host_addrpool_name_primary if is_primary_ipv6
                           else dual_stack_network_params.cluster_host_addrpool_name_secondary }}"

    - name: Prepare cluster-host configuration
      set_fact:
        cluster_host_uuid_ipv4: "{{ (addrpools |
                          selectattr('name', 'equalto', cluster_host_addrpool_ipv4) |
                          list | first)['uuid']|default(omit) }}"
        cluster_host_uuid_ipv6: "{{ (addrpools |
                          selectattr('name', 'equalto', cluster_host_addrpool_ipv6) |
                          list | first)['uuid']|default(omit) }}"
        current_cluster_host_c0_ipv4: "{{ (addrpools |
                          selectattr('name', 'equalto', cluster_host_addrpool_ipv4) |
                          list | first)['c0_ip']|default(omit) }}"
        current_cluster_host_c0_ipv6: "{{ (addrpools |
                          selectattr('name', 'equalto', cluster_host_addrpool_ipv6) |
                          list | first)['c0_ip']|default(omit) }}"
        current_cluster_host_c1_ipv4: "{{ (addrpools |
                          selectattr('name', 'equalto', cluster_host_addrpool_ipv4) |
                          list | first)['c1_ip']|default(omit) }}"
        current_cluster_host_c1_ipv6: "{{ (addrpools |
                          selectattr('name', 'equalto', cluster_host_addrpool_ipv6) |
                          list | first)['c1_ip']|default(omit) }}"
        new_cluster_host_c0_ipv4: "{{ dual_stack_network_params.cluster_host_node_0_address_primary if not is_primary_ipv6
                        else dual_stack_network_params.cluster_host_node_0_address_secondary }}"
        new_cluster_host_c0_ipv6: "{{ dual_stack_network_params.cluster_host_node_0_address_primary if is_primary_ipv6
                        else dual_stack_network_params.cluster_host_node_0_address_secondary }}"
        new_cluster_host_c1_ipv4: "{{ dual_stack_network_params.cluster_host_node_1_address_primary if not is_primary_ipv6
                        else dual_stack_network_params.cluster_host_node_1_address_secondary }}"
        new_cluster_host_c1_ipv6: "{{ dual_stack_network_params.cluster_host_node_1_address_primary if is_primary_ipv6
                        else dual_stack_network_params.cluster_host_node_1_address_secondary }}"

    - name: Prepare pxeboot configuration - addrpool name
      set_fact:
        pxeboot_addrpool_ipv4: "{{ dual_stack_network_params.pxeboot_addrpool_name_primary }}"

    - name: Prepare pxeboot configuration
      set_fact:
        pxeboot_uuid_ipv4: "{{ (addrpools |
                          selectattr('name', 'equalto', pxeboot_addrpool_ipv4) |
                          list | first)['uuid']|default(omit) }}"
        current_pxeboot_c0_ipv4: "{{ (addrpools |
                                selectattr('name', 'equalto', pxeboot_addrpool_ipv4) |
                                list | first)['c0_ip']|default(omit) }}"
        current_pxeboot_c1_ipv4: "{{ (addrpools |
                                selectattr('name', 'equalto', pxeboot_addrpool_ipv4) |
                                list | first)['c1_ip']|default(omit) }}"
        new_pxeboot_c0_ipv4: "{{ dual_stack_network_params.pxeboot_node_0_address_primary }}"
        new_pxeboot_c1_ipv4: "{{ dual_stack_network_params.pxeboot_node_1_address_primary }}"

    - name: Prepare storage configuration - addrpool name
      set_fact:
        storage_addrpool_ipv4: "{{ dual_stack_network_params.storage_addrpool_name_primary if not is_primary_ipv6
                           else dual_stack_network_params.storage_addrpool_name_secondary }}"
        storage_addrpool_ipv6: "{{ dual_stack_network_params.storage_addrpool_name_primary if is_primary_ipv6
                           else dual_stack_network_params.storage_addrpool_name_secondary }}"
      when: storage_node_0_address is defined and storage_node_1_address is defined

    - name: Prepare storage configuration
      set_fact:
        storage_uuid_ipv4: "{{ (addrpools |
                          selectattr('name', 'equalto', storage_addrpool_ipv4) |
                          list | first)['uuid']|default(omit) }}"
        storage_uuid_ipv6: "{{ (addrpools |
                          selectattr('name', 'equalto', storage_addrpool_ipv6) |
                          list | first)['uuid']|default(omit) }}"
        current_storage_c0_ipv4: "{{ (addrpools |
                          selectattr('name', 'equalto', storage_addrpool_ipv4) |
                          list | first)['c0_ip']|default(omit) }}"
        current_storage_c0_ipv6: "{{ (addrpools |
                          selectattr('name', 'equalto', storage_addrpool_ipv6) |
                          list | first)['c0_ip']|default(omit) }}"
        current_storage_c1_ipv4: "{{ (addrpools |
                          selectattr('name', 'equalto', storage_addrpool_ipv4) |
                          list | first)['c1_ip']|default(omit) }}"
        current_storage_c1_ipv6: "{{ (addrpools |
                          selectattr('name', 'equalto', storage_addrpool_ipv6) |
                          list | first)['c1_ip']|default(omit) }}"
        new_storage_c0_ipv4: "{{ dual_stack_network_params.storage_node_0_address_primary if not is_primary_ipv6
                        else dual_stack_network_params.storage_node_0_address_secondary }}"
        new_storage_c0_ipv6: "{{ dual_stack_network_params.storage_node_0_address_primary if is_primary_ipv6
                        else dual_stack_network_params.storage_node_0_address_secondary }}"
        new_storage_c1_ipv4: "{{ dual_stack_network_params.storage_node_1_address_primary if not is_primary_ipv6
                        else dual_stack_network_params.storage_node_1_address_secondary }}"
        new_storage_c1_ipv6: "{{ dual_stack_network_params.storage_node_1_address_primary if is_primary_ipv6
                        else dual_stack_network_params.storage_node_1_address_secondary }}"
      when: storage_node_0_address is defined and storage_node_1_address is defined

    - block:
      - name: Lock host
        include_role:
          name: common/host-lock
        vars:
          target_host: 'controller-0'

      - name: Update system mode
        expect:
          echo: yes
          command: bash -c 'source /etc/platform/openrc; system modify -m {{ duplex_mode }} '
          responses:
            (.*)Are you sure you want to continue(.*): "yes"
        failed_when: false
        when: current_system_mode.stdout == 'simplex'

      # Wait up to 20 minutes for the runtime manifest triggered by the previous
      # "system modify -m duplex" command, as there may be other runtime manifests
      # being applied
      - name: Wait for kubernetes duplex migration manifest completion, up to 20 minutes
        wait_for:
          path: "{{ kubernetes_duplex_migration_flag }}"
          state: present
          timeout: 1200
          msg: Timeout waiting for kubernetes duplex migration manifest completion

      - name: Update OAM IPv4 configuration
        shell: >-
          source /etc/platform/openrc;
          system addrpool-modify {{ oam_uuid_ipv4 }} \
            --controller0-address {{ new_oam_c0_ipv4 }} \
            --controller1-address {{ new_oam_c1_ipv4 }}
        args:
          warn: false
        when: oam_uuid_ipv4 is defined and
             (current_oam_c0_ipv4 != new_oam_c0_ipv4 or
              current_oam_c1_ipv4 != new_oam_c1_ipv4)

      - name: Update OAM IPv6 configuration
        shell: >-
          source /etc/platform/openrc;
          system addrpool-modify {{ oam_uuid_ipv6 }} \
            --controller0-address {{ new_oam_c0_ipv6 }} \
            --controller1-address {{ new_oam_c1_ipv6 }}
        args:
          warn: false
        when: oam_uuid_ipv6 is defined and
              (current_oam_c0_ipv6 != new_oam_c0_ipv6 or
               current_oam_c1_ipv6 != new_oam_c1_ipv6)

      - name: Update management IPv4 configuration
        shell: >-
          source /etc/platform/openrc;
          system addrpool-modify {{ mgmt_uuid_ipv4 }} \
            --controller0-address {{ new_mgmt_c0_ipv4 }} \
            --controller1-address {{ new_mgmt_c1_ipv4 }}
        args:
          warn: false
        when: mgmt_uuid_ipv4 is defined and
             (current_mgmt_c0_ipv4 != new_mgmt_c0_ipv4 or
              current_mgmt_c1_ipv4 != new_mgmt_c1_ipv4)

      - name: Update management IPv6 configuration
        shell: >-
          source /etc/platform/openrc;
          system addrpool-modify {{ mgmt_uuid_ipv6 }} \
            --controller0-address {{ new_mgmt_c0_ipv6 }} \
            --controller1-address {{ new_mgmt_c1_ipv6 }}
        args:
          warn: false
        when: mgmt_uuid_ipv6 is defined and
              (current_mgmt_c0_ipv6 != new_mgmt_c0_ipv6 or
               current_mgmt_c1_ipv6 != new_mgmt_c1_ipv6)

      - name: Update admin IPv4 configuration
        shell: >-
          source /etc/platform/openrc;
          system addrpool-modify {{ admin_uuid_ipv4 }} \
            --controller0-address {{ new_admin_c0_ipv4 }} \
            --controller1-address {{ new_admin_c1_ipv4 }}
        args:
          warn: false
        when: admin_uuid_ipv4 is defined and
             (current_admin_c0_ipv4 != new_admin_c0_ipv4 or
              current_admin_c1_ipv4 != new_admin_c1_ipv4)

      - name: Update admin IPv6 configuration
        shell: >-
          source /etc/platform/openrc;
          system addrpool-modify {{ admin_uuid_ipv6 }} \
            --controller0-address {{ new_admin_c0_ipv6 }} \
            --controller1-address {{ new_admin_c1_ipv6 }}
        args:
          warn: false
        when: admin_uuid_ipv6 is defined and
              (current_admin_c0_ipv6 != new_admin_c0_ipv6 or
               current_admin_c1_ipv6 != new_admin_c1_ipv6)

      - name: Update cluster-host IPv4 configuration
        shell: >-
          source /etc/platform/openrc;
          system addrpool-modify {{ cluster_host_uuid_ipv4 }} \
            --controller0-address {{ new_cluster_host_c0_ipv4 }} \
            --controller1-address {{ new_cluster_host_c1_ipv4 }}
        args:
          warn: false
        when: cluster_host_uuid_ipv4 is defined and
             (current_cluster_host_c0_ipv4 != new_cluster_host_c0_ipv4 or
              current_cluster_host_c1_ipv4 != new_cluster_host_c1_ipv4)

      - name: Update cluster-host IPv6 configuration
        shell: >-
          source /etc/platform/openrc;
          system addrpool-modify {{ cluster_host_uuid_ipv6 }} \
            --controller0-address {{ new_cluster_host_c0_ipv6 }} \
            --controller1-address {{ new_cluster_host_c1_ipv6 }}
        args:
          warn: false
        when: cluster_host_uuid_ipv6 is defined and
              (current_cluster_host_c0_ipv6 != new_cluster_host_c0_ipv6 or
               current_cluster_host_c1_ipv6 != new_cluster_host_c1_ipv6)

      - name: Update pxeboot IPv4 configuration
        shell: >-
          source /etc/platform/openrc;
          system addrpool-modify {{ pxeboot_uuid_ipv4 }} \
            --controller0-address {{ new_pxeboot_c0_ipv4 }} \
            --controller1-address {{ new_pxeboot_c1_ipv4 }}
        args:
          warn: false
        when: pxeboot_uuid_ipv4 is defined and
             (current_pxeboot_c0_ipv4 != new_pxeboot_c0_ipv4 or
              current_pxeboot_c1_ipv4 != new_pxeboot_c1_ipv4)

      - name: Update storage IPv4 configuration
        shell: >-
          source /etc/platform/openrc;
          system addrpool-modify {{ storage_uuid_ipv4 }} \
            --controller0-address {{ new_storage_c0_ipv4 }} \
            --controller1-address {{ new_storage_c1_ipv4 }}
        args:
          warn: false
        when: storage_uuid_ipv4 is defined and
             (current_storage_c0_ipv4 != new_storage_c0_ipv4 or
              current_storage_c1_ipv4 != new_storage_c1_ipv4)

      - name: Update storage IPv6 configuration
        shell: >-
          source /etc/platform/openrc;
          system addrpool-modify {{ storage_uuid_ipv6 }} \
            --controller0-address {{ new_storage_c0_ipv6 }} \
            --controller1-address {{ new_storage_c1_ipv6 }}
        args:
          warn: false
        when: storage_uuid_ipv6 is defined and
              (current_storage_c0_ipv6 != new_storage_c0_ipv6 or
               current_storage_c1_ipv6 != new_storage_c1_ipv6)

      - name: Unlock host
        include_role:
          name: common/host-unlock
        vars:
          target_host: 'controller-0'
          wait_for_unlock: true

      - name: Config and enable IPsec
        command: /usr/bin/ipsec-client pxecontroller
        register: result
        until: result.rc == 0
        retries: 3
        delay: 5
        become: yes

      when: current_system_mode.stdout == 'simplex' or
            oam_uuid_ipv4 is defined and
              (current_oam_c0_ipv4 != new_oam_c0_ipv4 or current_oam_c1_ipv4 != new_oam_c1_ipv4) or
            oam_uuid_ipv6 is defined and
              (current_oam_c0_ipv6 != new_oam_c0_ipv6 or current_oam_c1_ipv6 != new_oam_c1_ipv6)
